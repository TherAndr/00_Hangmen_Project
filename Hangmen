# Hangman game
Hangman is a guessing game where the player(s) try to guess the word by suggesting a letters.  
Player is allowed a certain number of mistakes.  
The game starts with a word where all letters are replaced with a `-` so the only information available to a player is a number of letters in a word.  
**Start**: `------`  
For each correctly guessed letter, a position of the letter is revealed (if there are multiple positions for a same letter, they are all revealed.  
**Correct**: `-E--E-`  
For each wrongly guessed letter, number of allowed mistakes decreases by 1.  
**Wrong**: 'Number of allowed mistakes is now 5'
Name of the game comes from a drawing of a hanged stick figure. For every mistake a new element of a hanged figure is added.  
If a player guesses a word before the last element of a figure is added, a player wins.  
If a player doesn't guess a word before the last element of a figure is added, player loses.
**Here you can see a simulation of 3 different steps:**  
Hidden word is: ------  
==============================================================  
Pick a letter:  
 S  
Correct! There is a letter S in a secret word!  
S-----  
==============================================================  
Pick a letter:  
 V  
WRONG! Number of mistakes left: 5  
  
        ____________  
         |  
         O  
==============================================================  
Pick a letter:  
 L  
WRONG! Number of mistakes left: 4  
  
        ____________  
         |  
         O  
        /  
==============================================================  
Pick a letter:  
## Try to create a hangman game on your own using what you have learned so far.
# hangman visuals
hangman={0:'''
        ____________
         |''',
        1:'''
        ____________
         |
         O''',
        2:'''
        ____________
         |
         O
        /''',
        3:'''
        ____________
         |
         O
        / \\''',
        4:'''
        ____________
         |
         O
        / \\
         |''',
        5:'''
        ____________
         |
         O
        / \\
         |
        /''',
        6:'''
        ____________
         |
         O
        / \\
         |
        / \\ '''}

 # create list of words that you want to be guessed
 word_list = []
 for  i in range(10): 
   print("which word do you wanna add? If you think you added enough words enter break")
   add_word = input()
   if add_word != "break":
     word_list.append(add_word.upper())
   else:
     break 
# # RESULT: word_list created that contains words

# NAME: VERSION - CHECK FOR DIGITS
# INFO: 7 trys and hangman

# player needs to guess a letter, loop running for the number of letters of the word

empty_list = []
secret_word = len(chosen_word)*"-"
acc_wrong_guesses = len(hangman) # depends on len(hangman) - 7
count_hangman = len(hangman) # 7 
guesses_correct = []
guesses_wrong = []
count_wrong_guesses = 0
count_revei_letters = 0

while count_wrong_guesses < acc_wrong_guesses:
  print(f"You have {acc_wrong_guesses-count_wrong_guesses} guess(es) left. Please enter letters only. If you want to exit the game enter break. If you want to guess the whole word enter whole")
  print(secret_word)
  guessed_letter = input()
  guessed_letter = guessed_letter.upper()
  # check for each position
  if guessed_letter.isdigit() == True:
    print("******************** PLEASE ENTER A LETTER NOT A NUMBER ********************************")
    continue
  if guessed_letter in chosen_word: # is letter in word?
    print(f"this letter is in the word")
    print(f"guessed wrong letters: {guesses_wrong}")
    number_of_letters = chosen_word.count(guessed_letter)
    count_revei_letters = number_of_letters + count_revei_letters     # count number of reveiled letters
    for idx in range(len(secret_word)):
      if chosen_word[idx] == guessed_letter and guessed_letter != "BREAK" and guessed_letter != "WHOLE":
        # guesses_correct.append(guessed_letter)
        empty_list.append(idx) # safes idx of letter
        secret_word = secret_word[:idx] + guessed_letter + secret_word[idx+1:]
      if number_of_letters > 1:
        number_of_letters = number_of_letters -1
        continue
    print(secret_word)
  elif guessed_letter not in chosen_word and guessed_letter != "BREAK" and guessed_letter != "WHOLE":
    # here try ??
    print(f"This letter is not in the word")
    # print(secret_word)
    print(hangman[len(hangman)-count_hangman]) 
    guesses_wrong.append(guessed_letter)
    print(f"guessed wrong letters: {guesses_wrong}")
    count_hangman = count_hangman-1
    count_wrong_guesses = count_wrong_guesses + 1
  elif guessed_letter == "BREAK": 
    print("you just eneded the game ended")
    print(f"the correct word is {chosen_word}")
    break
  elif guessed_letter == "WHOLE":
    print("Guess the whole word:")
    player_guess = input()
    player_guess = player_guess.upper()
    if player_guess == chosen_word: 
      print(f"Correct. You won the game.")
    else:
      print(f"Incorrect, you lost the game")
      print(f"the correct word is {chosen_word}")
      print(player_guess, chosen_word)
    break
  if (count_wrong_guesses) == 7: # presented after last guess 
    print("You are dead!")
    # print(hangman[6])
    print(f"the correct word is {chosen_word}")
  if count_revei_letters == len(secret_word): ## here 
    print(f"You won the game. The word is {chosen_word}")
    break
  count_guesses = count_guesses-1
  print("=================================================================")
  
